Q. Let f be a function on n = k^2 variables that is the AND of k OR’s, each of disjoint k 
variables. Prove that s(f) = bs(f) = C(f) = √n, deg(f) = D(f) = n, R(f) ≥ Ω(n).

A. It is trivial to see that s(f) is k, since the function reaches its maximum sensitivity in 
the case where the input string x switches on exactly one variable in each of the k sets of k
variables. In this case, switching off any of these variables will change the result; therefore,
the sensitivity must at least be k. We can also observe that no string with greater sensitivity 
exists, since an OR block has sensitivity 1, and an AND block has sensitivity equal to the number
of inputs. 

The block sensitivity is also k, since the AND block has sensitivity equal to the number of inputs.
Thus, when the input string is all 1s, we observe that the function is sensitive to each block of
k-bits, giving a total block sensitivity of k. 

A 0-certificate for this function is simply any of the k-bit blocks that has all 0s, while a 
1-certificate for this function only needs to prove that one variable in each k-bit block is
1, giving us a total of k variables. Thus, the certificate complexity of f is also k. 

Denote each k-bit term by yi, where yi is (1 - Q), Q = PROD(1 - xi) for all xi in the k-bit block.
Therefore, the total block can be represented by PROD(yi). This gives the resulting MLP a total degree
of k^2, or n. Therefore, deg(f) = n.

The decision tree complexity of the given function can be generated by use of an adversarial argument. 
On each input bit, the adversary classifies it as 0, unless it is the absolute last bit of the corresponding
OR block. This implies that every OR block outputs zero but has to evaluate all k-bits, while the AND
block now has to wait for all the OR blocks to evaluate, since none of them output 0. This implies that
in the worst case, the decision tree must evaluate all bits, giving D(f) = n. 

We observe the following distribution on the possible inputs: 